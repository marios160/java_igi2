package pl.mario.mautorun;

import java.awt.Color;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.TableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import org.netbeans.lib.awtextra.*;

/**
 *
 * @author Mario PL
 */
public class Gui extends javax.swing.JFrame{
    /**
     * Creates new form Glowne
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        name_server = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        time_button = new javax.swing.JButton();
        map_button = new javax.swing.JComboBox();
        players = new javax.swing.JLabel();
        current_players = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        maxplayers = new javax.swing.JComboBox();
        uptime = new javax.swing.JLabel();
        uptimeVal = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        passwdVal = new javax.swing.JLabel();
        startSrvTogg = new javax.swing.JToggleButton();
        kickAllButt = new javax.swing.JButton();
        visit = new javax.swing.JLabel();
        visitVal = new javax.swing.JLabel();
        crash = new javax.swing.JLabel();
        crashVal = new javax.swing.JLabel();
        crashbar = new javax.swing.JProgressBar();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        igiTab = new javax.swing.JTable(igitabmod);
        jScrollPane4 = new javax.swing.JScrollPane();
        consTab = new javax.swing.JTable(constabmod);
        jScrollPane2 = new javax.swing.JScrollPane();
        chat = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        logServer = new javax.swing.JTextPane();
        clearChat = new javax.swing.JButton();
        announceField = new javax.swing.JTextField();
        announceButt = new javax.swing.JButton();
        clearLog = new javax.swing.JButton();
        commandField = new javax.swing.JTextField();
        commandButt = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        readLog = new javax.swing.JCheckBox();
        statInLog = new javax.swing.JCheckBox();
        jCheckBox26 = new javax.swing.JCheckBox();
        Censors = new javax.swing.JCheckBox();
        adminPanel = new javax.swing.JCheckBox();
        controlItems = new javax.swing.JCheckBox();
        dispAddAdmin = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        strefaCzasowa = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        defMask = new javax.swing.JComboBox();
        MaxBanMask = new javax.swing.JLabel();
        maxMask = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        nameexe = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        snifport = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mautorun by Mario PL");
        setMaximumSize(new java.awt.Dimension(850, 630));
        setMinimumSize(new java.awt.Dimension(850, 630));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setPreferredSize(new java.awt.Dimension(850, 630));

        mainPanel.setToolTipText("");
        mainPanel.setMaximumSize(new java.awt.Dimension(850, 60));
        mainPanel.setMinimumSize(new java.awt.Dimension(850, 60));
        mainPanel.setPreferredSize(new java.awt.Dimension(800, 60));

        name.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        name.setText("Name:");

        name_server.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        name_server.setText("Polski Serwer IGI2 [igi2.xaa.pl]");

        time.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        time.setText("Time:");

        time_button.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        time_button.setText("00:00");
        time_button.setMargin(new java.awt.Insets(0, 2, 0, 2));
        time_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                time_buttonActionPerformed(evt);
            }
        });

        map_button.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        map_button.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Redstone", "Forestride", "Sandstorm", "Timberland", "Chinesetemple" }));
        map_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                map_buttonActionPerformed(evt);
            }
        });

        players.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        players.setText("Players:");

        current_players.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        current_players.setText("0");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setText("/");

        maxplayers.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        maxplayers.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", " " }));
        maxplayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxplayersActionPerformed(evt);
            }
        });

        uptime.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        uptime.setText("Uptime:");

        uptimeVal.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        uptimeVal.setText("0h");

        password.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        password.setText("Pass:");

        passwdVal.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        passwdVal.setForeground(new java.awt.Color(0, 204, 51));
        passwdVal.setText("No");

        startSrvTogg.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        startSrvTogg.setText("Enable Server");
        startSrvTogg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSrvToggActionPerformed(evt);
            }
        });

        kickAllButt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        kickAllButt.setText("Kick All");
        kickAllButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kickAllButtActionPerformed(evt);
            }
        });

        visit.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visit.setText("Visit:");

        visitVal.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitVal.setText("0");

        crash.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        crash.setText("Crash:");

        crashVal.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        crashVal.setText("0");

        crashbar.setForeground(new java.awt.Color(255, 0, 0));
        crashbar.setMaximum(1000);
        crashbar.setToolTipText("");
        crashbar.setString("");
        crashbar.setStringPainted(true);
        crashbar.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name_server, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(startSrvTogg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kickAllButt)
                        .addGap(18, 18, 18)
                        .addComponent(visit)
                        .addGap(9, 9, 9)
                        .addComponent(visitVal, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(uptime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uptimeVal, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(password)
                        .addGap(5, 5, 5)
                        .addComponent(passwdVal)
                        .addGap(18, 18, 18)
                        .addComponent(crash)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(crashVal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(crashbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(time)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(time_button, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(map_button, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(players)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(current_players, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxplayers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(name_server)
                        .addComponent(name)
                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(time_button, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(map_button, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(current_players, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(players, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(maxplayers, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(visit, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(visitVal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(uptime, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(uptimeVal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(passwdVal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(crashVal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(crash, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(startSrvTogg, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(kickAllButt, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(crashbar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane2.setFocusable(false);
        jTabbedPane2.setMaximumSize(new java.awt.Dimension(830, 500));
        jTabbedPane2.setMinimumSize(new java.awt.Dimension(830, 500));
        jTabbedPane2.setName(""); // NOI18N
        jTabbedPane2.setPreferredSize(new java.awt.Dimension(830, 500));

        jPanel3.setAutoscrolls(true);
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.setFocusable(false);
        jPanel3.setMaximumSize(new java.awt.Dimension(800, 500));
        jPanel3.setMinimumSize(new java.awt.Dimension(800, 500));
        jPanel3.setPreferredSize(new java.awt.Dimension(800, 500));

        jScrollPane1.setMaximumSize(new java.awt.Dimension(400, 150));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(400, 100));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 150));

        igiTab.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        igiTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nick", "Score", "IP", "Ping"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        igiTab.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        igiTab.setColumnSelectionAllowed(true);
        igiTab.setFocusable(false);
        igiTab.setMaximumSize(new java.awt.Dimension(400, 150));
        igiTab.setMinimumSize(new java.awt.Dimension(400, 100));
        igiTab.setPreferredSize(new java.awt.Dimension(400, 150));
        igiTab.setRowHeight(15);
        jScrollPane1.setViewportView(igiTab);
        igiTab.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (igiTab.getColumnModel().getColumnCount() > 0) {
            igiTab.getColumnModel().getColumn(0).setResizable(false);
            igiTab.getColumnModel().getColumn(0).setPreferredWidth(20);
            igiTab.getColumnModel().getColumn(1).setResizable(false);
            igiTab.getColumnModel().getColumn(1).setPreferredWidth(160);
            igiTab.getColumnModel().getColumn(2).setResizable(false);
            igiTab.getColumnModel().getColumn(2).setPreferredWidth(60);
            igiTab.getColumnModel().getColumn(3).setResizable(false);
            igiTab.getColumnModel().getColumn(3).setPreferredWidth(100);
            igiTab.getColumnModel().getColumn(4).setResizable(false);
            igiTab.getColumnModel().getColumn(4).setPreferredWidth(40);
        }

        jScrollPane4.setAutoscrolls(true);
        jScrollPane4.setMaximumSize(new java.awt.Dimension(400, 150));
        jScrollPane4.setMinimumSize(new java.awt.Dimension(400, 100));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(400, 150));

        consTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nick", "Score", "IP", "Ping"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        consTab.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        consTab.setFocusable(false);
        consTab.setMaximumSize(new java.awt.Dimension(400, 150));
        consTab.setMinimumSize(new java.awt.Dimension(400, 100));
        consTab.setPreferredSize(new java.awt.Dimension(400, 150));
        consTab.setRowHeight(15);
        jScrollPane4.setViewportView(consTab);
        if (consTab.getColumnModel().getColumnCount() > 0) {
            consTab.getColumnModel().getColumn(0).setResizable(false);
            consTab.getColumnModel().getColumn(0).setPreferredWidth(20);
            consTab.getColumnModel().getColumn(1).setResizable(false);
            consTab.getColumnModel().getColumn(1).setPreferredWidth(160);
            consTab.getColumnModel().getColumn(2).setResizable(false);
            consTab.getColumnModel().getColumn(2).setPreferredWidth(60);
            consTab.getColumnModel().getColumn(3).setResizable(false);
            consTab.getColumnModel().getColumn(3).setPreferredWidth(100);
            consTab.getColumnModel().getColumn(4).setResizable(false);
            consTab.getColumnModel().getColumn(4).setPreferredWidth(40);
        }

        jScrollPane2.setAutoscrolls(true);

        chat.setEditable(false);
        chat.setMaximumSize(new java.awt.Dimension(400, 270));
        chat.setMinimumSize(new java.awt.Dimension(400, 100));
        chat.setName(""); // NOI18N
        chat.setPreferredSize(new java.awt.Dimension(400, 270));
        jScrollPane2.setViewportView(chat);

        jScrollPane6.setAutoscrolls(true);

        logServer.setMaximumSize(new java.awt.Dimension(400, 270));
        logServer.setMinimumSize(new java.awt.Dimension(400, 100));
        logServer.setPreferredSize(new java.awt.Dimension(400, 270));
        jScrollPane6.setViewportView(logServer);

        clearChat.setText("Clear");
        clearChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearChatActionPerformed(evt);
            }
        });

        announceField.setToolTipText("Announce message");
        announceField.setMaximumSize(new java.awt.Dimension(200, 20));
        announceField.setMinimumSize(new java.awt.Dimension(100, 20));
        announceField.setName(""); // NOI18N
        announceField.setPreferredSize(new java.awt.Dimension(200, 20));
        announceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                announceFieldActionPerformed(evt);
            }
        });
        announceField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                announceFieldKeyPressed(evt);
            }
        });

        announceButt.setText("Send announce");
        announceButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                announceButtActionPerformed(evt);
            }
        });

        clearLog.setText("Clear");
        clearLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearLogActionPerformed(evt);
            }
        });

        commandField.setMaximumSize(new java.awt.Dimension(200, 20));
        commandField.setMinimumSize(new java.awt.Dimension(100, 20));
        commandField.setPreferredSize(new java.awt.Dimension(200, 20));
        commandField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                commandFieldKeyPressed(evt);
            }
        });

        commandButt.setText("Send command");
        commandButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(clearChat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(announceField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(28, 28, 28)
                        .addComponent(announceButt)
                        .addGap(8, 8, 8)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(clearLog)
                        .addGap(14, 14, 14)
                        .addComponent(commandField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(22, 22, 22)
                        .addComponent(commandButt))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(49, 49, 49))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane6))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearChat)
                    .addComponent(announceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(announceButt)
                    .addComponent(clearLog)
                    .addComponent(commandField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(commandButt))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Main", jPanel3);

        jPanel2.setMaximumSize(new java.awt.Dimension(800, 630));
        jPanel2.setMinimumSize(new java.awt.Dimension(800, 630));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 630));
        jPanel2.setLayout(new java.awt.GridLayout(20, 10, 10, 0));

        readLog.setText("Analyze log");
        readLog.setToolTipText("analyze log");
        readLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readLogActionPerformed(evt);
            }
        });
        jPanel2.add(readLog);

        statInLog.setText("Stats from log");
        statInLog.setToolTipText("Read statistic from log");
        jPanel2.add(statInLog);

        jCheckBox26.setText("Welcome players");
        jPanel2.add(jCheckBox26);

        Censors.setText("Censors");
        jPanel2.add(Censors);

        adminPanel.setText("Admin panel");
        adminPanel.setToolTipText("Chat panel admins");
        jPanel2.add(adminPanel);

        controlItems.setText("Control items");
        controlItems.setToolTipText("Control items ");
        jPanel2.add(controlItems);

        dispAddAdmin.setText("Display add admin");
        dispAddAdmin.setToolTipText("Display adding admin");
        jPanel2.add(dispAddAdmin);

        jLabel1.setText("Time Zone");
        jPanel2.add(jLabel1);

        strefaCzasowa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "GMT-11:00", "GMT-10:00", "GMT-9:00", "GMT-8:00", "GMT-7:00", "GMT-6:00", "GMT-5:00", "GMT-4:00", "GMT-3:00", "GMT-2:00", "GMT-1:00", "GMT0:00", "GMT+1:00", "GMT+2:00", "GMT+3:00", "GMT+4:00", "GMT+5:00", "GMT+6:00", "GMT+7:00", "GMT+8:00", "GMT+9:00", "GMT+10:00", "GMT+11:00", "GMT+12:00" }));
        strefaCzasowa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strefaCzasowaActionPerformed(evt);
            }
        });
        jPanel2.add(strefaCzasowa);
        strefaCzasowa.getAccessibleContext().setAccessibleName("Strefa Czasowa");

        jLabel2.setText("Default ban mask ");
        jPanel2.add(jLabel2);

        defMask.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "/1", "/2", "/3", "/4", "/5", "/6", "/7", "/8", "/9", "/10", "/11", "/12", "/13", "/14", "/15", "/16", "/17", "/18", "/19", "/20", "/21", "/22", "/23", "/24", "/25", "/26", "/27", "/28", "/29", "/30" }));
        jPanel2.add(defMask);
        defMask.getAccessibleContext().setAccessibleName("");

        MaxBanMask.setText("Max ban mask");
        jPanel2.add(MaxBanMask);

        maxMask.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "/1", "/2", "/3", "/4", "/5", "/6", "/7", "/8", "/9", "/10", "/11", "/12", "/13", "/14", "/15", "/16", "/17", "/18", "/19", "/20", "/21", "/22", "/23", "/24", "/25", "/26", "/27", "/28", "/29", "/30" }));
        jPanel2.add(maxMask);

        jLabel5.setText("Name of exec (default igi2.exe)");
        jPanel2.add(jLabel5);

        nameexe.setText("igi2.exe");
        nameexe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameexeActionPerformed(evt);
            }
        });
        jPanel2.add(nameexe);

        jLabel6.setText("Port to snifer packet");
        jPanel2.add(jLabel6);

        snifport.setText("4321");
        jPanel2.add(snifport);

        jTabbedPane2.addTab("Settings", jPanel2);

        jLabel4.setText("By Mario PL 2015");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4))
        );

        getAccessibleContext().setAccessibleDescription("Program to control dedicated server IGI2.");
    }// </editor-fold>//GEN-END:initComponents


    private void clearChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearChatActionPerformed
        chat.setText(null);
    }//GEN-LAST:event_clearChatActionPerformed

    private void clearLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearLogActionPerformed
        logServer.setText(null);
    }//GEN-LAST:event_clearLogActionPerformed

    private void startSrvToggActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startSrvToggActionPerformed
        // TODO add your handling code here:     
        if (Gui.startSrvTogg.isSelected()) {
            Glowna.startServer();
        } else {
            Glowna.stopServer();
        }

    }//GEN-LAST:event_startSrvToggActionPerformed

    private void strefaCzasowaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strefaCzasowaActionPerformed
        String strefa = strefaCzasowa.getSelectedItem().toString();
        Conf.czas.setTimeZone(TimeZone.getTimeZone(strefa));
    }//GEN-LAST:event_strefaCzasowaActionPerformed

    private void map_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_map_buttonActionPerformed

        int id = map_button.getSelectedIndex();
        int idMap = 0;
        
        for(int i=0; i<Info.listMaps.length; i++)     
            if(Info.mapname.equals(Info.listMaps[i]))  
            {
                idMap = i;
                break;
            }
        if (idMap != id) {
           
            Gui.dodajLog("Changing map to "+map_button.getSelectedItem(),Gui.black); 
            Pakiety.sendPck("/sv " + Komendy.gotomap + " " + Info.listIdMaps[id]);
            idMap = id;
        }
    }//GEN-LAST:event_map_buttonActionPerformed

    private void kickAllButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kickAllButtActionPerformed
        Gui.dodajLog("Kicking all (REMOTELY)",Gui.black);
        Cmd.kickall();
    }//GEN-LAST:event_kickAllButtActionPerformed

    private void time_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_time_buttonActionPerformed
        Gui.dodajLog("Restarting map",Gui.black);
        Cmd.restart();
    }//GEN-LAST:event_time_buttonActionPerformed

    private void announceButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_announceButtActionPerformed
        String ann = announceField.getText();
        if (!ann.isEmpty()) {
            String m = Pakiety.sendPck("/lo " + Komendy.announce + " (\"" + ann + "\")");
            if(!m.isEmpty())
                Gui.dodajChat("YOU > " + ann, Gui.black);
            announceField.setText(null);
        }
    }//GEN-LAST:event_announceButtActionPerformed

    private void commandButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandButtActionPerformed
        String cmd = commandField.getText();
        if (!cmd.isEmpty()) {
            String odp = Pakiety.sendPck("/"+cmd);
            if (odp.isEmpty())
                odp = "No answer, wrong command";
            Gui.dodajLog(cmd, Gui.blue);
            Gui.dodajLog(odp.trim(), Gui.blue);
            commandField.setText(null);
        }
    }//GEN-LAST:event_commandButtActionPerformed

    private void commandFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_commandFieldKeyPressed
        if(evt.getKeyCode() == 10)
            commandButtActionPerformed(null);
    }//GEN-LAST:event_commandFieldKeyPressed

    private void announceFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_announceFieldKeyPressed
        if(evt.getKeyCode() == 10)
            announceButtActionPerformed(null);
    }//GEN-LAST:event_announceFieldKeyPressed

    private void maxplayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxplayersActionPerformed
        int id = maxplayers.getSelectedIndex();
        if (Info.maxplayers != id) {
            Gui.dodajLog("Changing maxplayers to "+id,Gui.black);
            Pakiety.sendPck("/sv "+Komendy.maxplayers+" "+id);
        }
    }//GEN-LAST:event_maxplayersActionPerformed

    private void nameexeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameexeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameexeActionPerformed

    private void announceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_announceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_announceFieldActionPerformed

    private void readLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readLogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_readLogActionPerformed

    static void dodajChat(String msg, SimpleAttributeSet color)
    {
        try {
            Gui.dchat.insertString(Gui.dchat.getLength(),Conf.getCzas()+msg+"\n",color); 
            Gui.chat.setCaretPosition(Gui.dchat.getLength());
        } catch (BadLocationException ex) {
           Loggs.loguj("Gui-dodajChat", ex.toString());
        }
    }
    static void dodajLog(String msg, SimpleAttributeSet color )
    {
        try {
            Gui.dlog.insertString(Gui.dlog.getLength(),Conf.getCzas()+msg+"\n",color); 
            Gui.chat.setCaretPosition(Gui.dchat.getLength());
        } catch (BadLocationException ex) {
           Loggs.loguj("Gui-dodajLog", ex.toString());
        }
    }
    public void setFont() {
        dchat = chat.getStyledDocument();
        dlog = logServer.getStyledDocument();
        red = new SimpleAttributeSet();
        boom = new SimpleAttributeSet();
        blue = new SimpleAttributeSet();
        green = new SimpleAttributeSet();
        gray = new SimpleAttributeSet();
        lgray = new SimpleAttributeSet();
        black = new SimpleAttributeSet();
        cyan = new SimpleAttributeSet();
        dgray = new SimpleAttributeSet();
        mag = new SimpleAttributeSet();
        org = new SimpleAttributeSet();
        pink = new SimpleAttributeSet();
        yell = new SimpleAttributeSet();
        white = new SimpleAttributeSet();

        StyleConstants.setForeground(red, Color.RED);
        StyleConstants.setForeground(boom, Color.RED);
        StyleConstants.setForeground(blue, Color.BLUE);
        StyleConstants.setForeground(green, Color.GREEN);
        StyleConstants.setForeground(gray, Color.GRAY);
        StyleConstants.setForeground(lgray, Color.LIGHT_GRAY);
        StyleConstants.setForeground(black, Color.BLACK);
        StyleConstants.setForeground(cyan, Color.CYAN);
        StyleConstants.setForeground(dgray, Color.DARK_GRAY);
        StyleConstants.setForeground(mag, Color.MAGENTA);
        StyleConstants.setForeground(org, Color.ORANGE);
        StyleConstants.setForeground(pink, Color.PINK);
        StyleConstants.setForeground(yell, Color.YELLOW);
        StyleConstants.setForeground(white, Color.WHITE);
        StyleConstants.setBold(boom, true);

    }

    /**
     * @param args the command line arguments
     */
    public Gui() {
        initComponents();
        setFont();
        announceField.setDocument(new JTextFieldLimit(39));
        String className = UIManager.getSystemLookAndFeelClassName();
        try {
            UIManager.setLookAndFeel("GTK+");
        } catch (Exception exc) {
            // ignore
        }
        /*try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
         System.out.println(info.getName());
         if ("GTK+".equals(info.getName())) {
         javax.swing.UIManager.setLookAndFeel(info.getClassName());
         break;
         }
         }
         } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         }*/
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                setVisible(true);
            }
        });

    }

    static StyledDocument dchat;
    static StyledDocument dlog;
    static SimpleAttributeSet boom;
    static SimpleAttributeSet red;
    static SimpleAttributeSet blue;
    static SimpleAttributeSet green;
    static SimpleAttributeSet gray;
    static SimpleAttributeSet lgray;
    static SimpleAttributeSet black;
    static SimpleAttributeSet cyan;
    static SimpleAttributeSet dgray;
    static SimpleAttributeSet mag;
    static SimpleAttributeSet org;
    static SimpleAttributeSet pink;
    static SimpleAttributeSet yell;
    static SimpleAttributeSet white;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JCheckBox Censors;
    private javax.swing.JLabel MaxBanMask;
    public static javax.swing.JCheckBox adminPanel;
    private javax.swing.JButton announceButt;
    private javax.swing.JTextField announceField;
    public static javax.swing.JTextPane chat;
    private javax.swing.JButton clearChat;
    private javax.swing.JButton clearLog;
    private javax.swing.JButton commandButt;
    public static javax.swing.JTextField commandField;
    public static javax.swing.JTable consTab;
    public static javax.swing.JCheckBox controlItems;
    private javax.swing.JLabel crash;
    public static javax.swing.JLabel crashVal;
    public static javax.swing.JProgressBar crashbar;
    public static javax.swing.JLabel current_players;
    public static javax.swing.JComboBox defMask;
    public static javax.swing.JCheckBox dispAddAdmin;
    public static javax.swing.JTable igiTab;
    private javax.swing.JCheckBox jCheckBox26;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton kickAllButt;
    protected static javax.swing.JTextPane logServer;
    private javax.swing.JPanel mainPanel;
    public static javax.swing.JComboBox map_button;
    public static javax.swing.JComboBox maxMask;
    public static javax.swing.JComboBox maxplayers;
    private javax.swing.JLabel name;
    public static javax.swing.JLabel name_server;
    public static javax.swing.JTextField nameexe;
    public static javax.swing.JLabel passwdVal;
    private javax.swing.JLabel password;
    private javax.swing.JLabel players;
    public static javax.swing.JCheckBox readLog;
    public static javax.swing.JTextField snifport;
    public static javax.swing.JToggleButton startSrvTogg;
    public static javax.swing.JCheckBox statInLog;
    public static javax.swing.JComboBox strefaCzasowa;
    private javax.swing.JLabel time;
    public static javax.swing.JButton time_button;
    private javax.swing.JLabel uptime;
    public static javax.swing.JLabel uptimeVal;
    private javax.swing.JLabel visit;
    public static javax.swing.JLabel visitVal;
    // End of variables declaration//GEN-END:variables
    public static TableModel igitabmod;
    public static TableModel constabmod;

    
    
}